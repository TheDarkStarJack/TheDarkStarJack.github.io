

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://thedarkstarjack.github.io/</id>
  <title>DarkStar</title>
  <subtitle>Blog and portfolio focused on Linux, Database, Shell, Python, CPP, and other technical things.</subtitle>
  <updated>2024-09-26T17:53:15+08:00</updated>
  <author>
    <name>TheDarkStarJack</name>
    <uri>https://thedarkstarjack.github.io/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="https://thedarkstarjack.github.io/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="zh-CN"
    href="https://thedarkstarjack.github.io/"/>
  <generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator>
  <rights> © 2024 TheDarkStarJack </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>nmcli 管理网络</title>
    <link href="https://thedarkstarjack.github.io/posts/nmcli-%E7%AE%A1%E7%90%86%E7%BD%91%E7%BB%9C/" rel="alternate" type="text/html" title="nmcli 管理网络" />
    <published>2024-09-26T17:13:10+08:00</published>
  
    <updated>2024-09-26T17:13:10+08:00</updated>
  
    <id>https://thedarkstarjack.github.io/posts/nmcli-%E7%AE%A1%E7%90%86%E7%BD%91%E7%BB%9C/</id>
    <content src="https://thedarkstarjack.github.io/posts/nmcli-%E7%AE%A1%E7%90%86%E7%BD%91%E7%BB%9C/" />
    <author>
      <name>TheDarkStarJack</name>
    </author>

  
    
    <category term="Linux" />
    
    <category term="Network" />
    
  

  <summary>前言

一般 Linux 管理网络都是通过直接编辑网卡文件或者 ip 、ifconfig  命令，不过自从用了 nmcli 之后觉得方便不少。而且在 Redhat8+ 之后也不推荐直接修改网卡配置文件。

这里记录一下自己安装 fedora server 之后完了设置自动连接，以为会默认自动连接😂

详细的可以参考这里，本来想自己总结一下的，发现这篇文章已经写的很详细了，这里就简单记录一下配置自动连接网卡的命令

连接网络

如果插上网卡之后，发现无法连接网络，可以使用 ip a 查看网卡是否启动。如果启动但是没有连接，可以使用以下命令：
sudo nmcli device connect enp2s0 ## 最后面是网卡的名字，根据自己的名称修改


设置好之后就可以上网了，在自己的家或者没有限制 ip 的环境中，保持默认就行了，如果有 ip 限制，可以根据以下命令手动设置：
nm...</summary>

  </entry>

  
  <entry>
    <title>Oracle 分区和分区索引</title>
    <link href="https://thedarkstarjack.github.io/posts/Oracle-%E5%88%86%E5%8C%BA%E5%92%8C%E5%88%86%E5%8C%BA%E7%B4%A2%E5%BC%95/" rel="alternate" type="text/html" title="Oracle 分区和分区索引" />
    <published>2024-09-19T10:14:01+08:00</published>
  
    <updated>2024-09-19T10:14:01+08:00</updated>
  
    <id>https://thedarkstarjack.github.io/posts/Oracle-%E5%88%86%E5%8C%BA%E5%92%8C%E5%88%86%E5%8C%BA%E7%B4%A2%E5%BC%95/</id>
    <content src="https://thedarkstarjack.github.io/posts/Oracle-%E5%88%86%E5%8C%BA%E5%92%8C%E5%88%86%E5%8C%BA%E7%B4%A2%E5%BC%95/" />
    <author>
      <name>TheDarkStarJack</name>
    </author>

  
    
    <category term="DataBase" />
    
    <category term="Oracle" />
    
  

  <summary>前言

记录一下 Oracle 的分区表和索引官方文档位置，方便后续查询

分区表和分区索引

Index Partitioning

About Merging Partitions and Subpartitions

如果涉及的分区或子分区包含数据，则索引可能会被标记为 UNUSABLE，如下表所述：


  
    
      Table Type
      Index Behavior
    
  
  
    
      Regular (Heap)
      Unless you specify UPDATE INDEXES as part of the ALTER TABLE statement:- The database marks UNUSABLE all resulting corresponding local index partitions...</summary>

  </entry>

  
  <entry>
    <title>统计博客网站访问数据</title>
    <link href="https://thedarkstarjack.github.io/posts/%E7%BB%9F%E8%AE%A1%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99%E6%95%B0%E6%8D%AE/" rel="alternate" type="text/html" title="统计博客网站访问数据" />
    <published>2024-09-11T15:21:43+08:00</published>
  
    <updated>2024-09-11T15:21:43+08:00</updated>
  
    <id>https://thedarkstarjack.github.io/posts/%E7%BB%9F%E8%AE%A1%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99%E6%95%B0%E6%8D%AE/</id>
    <content src="https://thedarkstarjack.github.io/posts/%E7%BB%9F%E8%AE%A1%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99%E6%95%B0%E6%8D%AE/" />
    <author>
      <name>TheDarkStarJack</name>
    </author>

  
    
    <category term="Web" />
    
    <category term="blog" />
    
  

  <summary>前言

搭建好博客网站之后，如果更加细致的分析访问数据数据，可以利用 Google、cloudflare 等站点为自己的网站分析流量

我的网站基于 GitHub Pages 、cloudflare 、 jekyll-theme-chirpy 搭建

Google Analytics

使用 Google Analytics 监听网站页面访问量，可以参考 这里

将 Google Analytics 提供的 id 信息填入 chirpy 或者其他支持网站分析的主题配置文件中，以 chirpy 为例配置文件就在仓库根目录 _config.yml 文件中 analytics 代码块中，支持多个分析网站


需要将 Google Analytics 提供的 js 代码配置在自己的网站 html 文件中才可以采集到数据

cloudflare

cloudflare 也提供 Web Anal...</summary>

  </entry>

  
  <entry>
    <title>CentOS9 升级内核</title>
    <link href="https://thedarkstarjack.github.io/posts/CentOS9-%E5%8D%87%E7%BA%A7%E5%86%85%E6%A0%B8/" rel="alternate" type="text/html" title="CentOS9 升级内核" />
    <published>2024-09-11T13:49:36+08:00</published>
  
    <updated>2024-09-19T17:24:35+08:00</updated>
  
    <id>https://thedarkstarjack.github.io/posts/CentOS9-%E5%8D%87%E7%BA%A7%E5%86%85%E6%A0%B8/</id>
    <content src="https://thedarkstarjack.github.io/posts/CentOS9-%E5%8D%87%E7%BA%A7%E5%86%85%E6%A0%B8/" />
    <author>
      <name>TheDarkStarJack</name>
    </author>

  
    
    <category term="Linux" />
    
    <category term="CentOS" />
    
  

  <summary>前言

随着 CentOS 政策的调整，CentOS 官方宣布了停止维护 CentOS 的计划，并推出了 CentOS Stream （Stream 版为滚动更新版） 项目。直接从 Redhat 的下游变成了上游，尝试了一下 CentOS Stream 9，一些软件不能直接通过默认的镜像源更新了（例如vim），而且内核默认也比较低，才 5.14.0 ，而且也不能像 fedora 直接 dnf update 的方式升级到最新内核，记录一下手动升级内核的过程

百度百科

维基百科

升级内核

想要升级内核，需要到第三方仓库进行下载，默认的仓库中没有新的内核。可以通过 ELRepo 仓库安装使用的版内核，导入仓库后就可以通过 yum/dnf 命令进行安装了


  查看现有内核
      uname -r
    
  
  导入 ELRepo 镜像源
      ## 导入密钥
 ...</summary>

  </entry>

  
  <entry>
    <title>Linux 函数说明</title>
    <link href="https://thedarkstarjack.github.io/posts/Linux-%E5%87%BD%E6%95%B0%E8%AF%B4%E6%98%8E/" rel="alternate" type="text/html" title="Linux 函数说明" />
    <published>2024-09-10T13:52:25+08:00</published>
  
    <updated>2024-09-10T13:52:25+08:00</updated>
  
    <id>https://thedarkstarjack.github.io/posts/Linux-%E5%87%BD%E6%95%B0%E8%AF%B4%E6%98%8E/</id>
    <content src="https://thedarkstarjack.github.io/posts/Linux-%E5%87%BD%E6%95%B0%E8%AF%B4%E6%98%8E/" />
    <author>
      <name>TheDarkStarJack</name>
    </author>

  
    
    <category term="Linux" />
    
    <category term="man" />
    
  

  <summary>前言

在 strace 进程的时候会显示出来调用的函数，有的时候查看数据库进程的时候方便查看，在这里记录一下一些函数的说明

函数

以下内容结合 chatgpt 和 google 翻译

truncate

描述
truncate, ftruncate 函数作用是将文件截断为指定长度，函数原型

定义
#include &amp;amp;lt;unistd.h&amp;amp;gt;
#include &amp;amp;lt;sys/types.h&amp;amp;gt;

int truncate(const char *path, off_t length);
int ftruncate(int fd, off_t length);


truncate() 和 ftruncate() 函数导致由路径命名或由 fd 引用的常规文件被截断为精确长度字节的大小。

如果文件以前大于此大小，则多余的数据将丢失。如果文件以前较短，则会对其进行扩展...</summary>

  </entry>

</feed>


