

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://thedarkstarjack.github.io/</id>
  <title>DarkStar</title>
  <subtitle>Blog and portfolio focused on Linux, Database, Shell, Python, CPP, and other technical things.</subtitle>
  <updated>2024-08-28T17:28:11+08:00</updated>
  <author>
    <name>TheDarkStarJack</name>
    <uri>https://thedarkstarjack.github.io/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="https://thedarkstarjack.github.io/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="zh-CN"
    href="https://thedarkstarjack.github.io/"/>
  <generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator>
  <rights> © 2024 TheDarkStarJack </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>PostrgeSQL 常用函数（持续更新）</title>
    <link href="https://thedarkstarjack.github.io/posts/PostrgeSQL-%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/" rel="alternate" type="text/html" title="PostrgeSQL 常用函数（持续更新）" />
    <published>2024-08-28T15:29:36+08:00</published>
  
    <updated>2024-08-28T15:29:36+08:00</updated>
  
    <id>https://thedarkstarjack.github.io/posts/PostrgeSQL-%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/</id>
    <content src="https://thedarkstarjack.github.io/posts/PostrgeSQL-%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/" />
    <author>
      <name>TheDarkStarJack</name>
    </author>

  
    
    <category term="DataBase" />
    
    <category term="PostrgeSQL" />
    
  

  <summary>前言

记录一些 PostgreSQL 的常用函数

字符串

字符串/字段拼接

string_agg

string_agg：用于拼接字段，需要两个参数，第一个是需要进行拼接的字段名，第二个是用于拼接字符的拼接符号
select string_agg(a,&amp;#39;, &amp;#39;) from tab1;



如果字段不是字符类型，例如字段是数字类型，需要先转换为字符才能进行拼接，否则会报错

|| ：和 Oracle 一样，可以用于拼接字符或者字段，如果是不是拼接的字段，字符串需要在两个单引号内
select a || &amp;#39;,&amp;#39; || b from tab1 ;
select &amp;#39;a&amp;#39; || &amp;#39;,&amp;#39; || &amp;#39;b&amp;#39; ;


类型转换

可以使用 cast 函数或者双冒号 ::
select a::text from tab1;
select 1::text;

select cast(a as te...</summary>

  </entry>

  
  <entry>
    <title>podman 修改仓库源</title>
    <link href="https://thedarkstarjack.github.io/posts/podman-%E4%BF%AE%E6%94%B9%E4%BB%93%E5%BA%93%E6%BA%90/" rel="alternate" type="text/html" title="podman 修改仓库源" />
    <published>2024-08-28T11:21:43+08:00</published>
  
    <updated>2024-08-28T11:21:43+08:00</updated>
  
    <id>https://thedarkstarjack.github.io/posts/podman-%E4%BF%AE%E6%94%B9%E4%BB%93%E5%BA%93%E6%BA%90/</id>
    <content src="https://thedarkstarjack.github.io/posts/podman-%E4%BF%AE%E6%94%B9%E4%BB%93%E5%BA%93%E6%BA%90/" />
    <author>
      <name>TheDarkStarJack</name>
    </author>

  
    
    <category term="containers" />
    
    <category term="podman" />
    
  

  <summary>前言

Podman 是一个开源的容器运行时项目，可在大多数 Linux 平台上使用（Windows 下也可以运行，不过个人还没测试）。Podman 提供与 Docker 非常相似的功能。它不需要在你的系统上运行任何守护进程，并且它也可以在没有 root 权限的情况下运行。

Podman 可以管理和运行任何符合 OCI（Open Container Initiative）规范的容器和容器镜像。Podman 提供了一个与 Docker 兼容的命令行前端来管理 Docker 镜像。

虽然目前容器化部署基本都采用 docker ，但是随着 RedHat 系列的 Linux 升级到 8 之后基本就采用 podman 作为自身的容器化产品之后，已经不能通过软件仓库安装 docker 了，虽然可以通过一些方法安装 docker ，但是个人还是比较喜欢使用 RedHat 系列，所以也就尝试使用...</summary>

  </entry>

  
  <entry>
    <title>PostgreSQL 配置密码验证策略</title>
    <link href="https://thedarkstarjack.github.io/posts/PostgreSQL-%E9%85%8D%E7%BD%AE%E5%AF%86%E7%A0%81%E9%AA%8C%E8%AF%81%E7%AD%96%E7%95%A5/" rel="alternate" type="text/html" title="PostgreSQL 配置密码验证策略" />
    <published>2024-08-27T13:55:20+08:00</published>
  
    <updated>2024-08-27T13:55:20+08:00</updated>
  
    <id>https://thedarkstarjack.github.io/posts/PostgreSQL-%E9%85%8D%E7%BD%AE%E5%AF%86%E7%A0%81%E9%AA%8C%E8%AF%81%E7%AD%96%E7%95%A5/</id>
    <content src="https://thedarkstarjack.github.io/posts/PostgreSQL-%E9%85%8D%E7%BD%AE%E5%AF%86%E7%A0%81%E9%AA%8C%E8%AF%81%E7%AD%96%E7%95%A5/" />
    <author>
      <name>TheDarkStarJack</name>
    </author>

  
    
    <category term="DataBase" />
    
    <category term="PostgreSQL" />
    
  

  <summary>概述
数据库等保的时候会遇到一些安全加固操作，其中 PostgreSQL 数据库设置密码验证失败延迟时间可以通过安装 auth_delay 扩展插件来实现，该设置主要是防止暴力破解，在验证失败后, 会延迟一段时间后，才能继续验证。可以搭配 passwordcheck 限制简单密码。

一般来说 ‘passwordcheck、auth_delay’ 两个插件就在源码路径中的 contrid 目录下。源码编译安装 PostgreSQL 可以参考我之前写的脚本一键安装。

编译安装插件
下载相同版本的源码解压之后进入目录，在安装插件之前请先编译源码，然后进入插件的路径进行安装插件，如果在编译时新建的编译目录，例如 build ，需要进入 ‘build/contrib’ 路径下：
cd /software/postgresql-15.4/contrib/
# 安装命令
make &amp;amp;amp;&amp;amp;...</summary>

  </entry>

  
  <entry>
    <title>vim 匹配指定行号的内容</title>
    <link href="https://thedarkstarjack.github.io/posts/vim-%E5%8C%B9%E9%85%8D%E6%8C%87%E5%AE%9A%E8%A1%8C%E5%8F%B7%E7%9A%84%E5%86%85%E5%AE%B9/" rel="alternate" type="text/html" title="vim 匹配指定行号的内容" />
    <published>2024-08-27T10:39:27+08:00</published>
  
    <updated>2024-08-27T10:39:27+08:00</updated>
  
    <id>https://thedarkstarjack.github.io/posts/vim-%E5%8C%B9%E9%85%8D%E6%8C%87%E5%AE%9A%E8%A1%8C%E5%8F%B7%E7%9A%84%E5%86%85%E5%AE%B9/</id>
    <content src="https://thedarkstarjack.github.io/posts/vim-%E5%8C%B9%E9%85%8D%E6%8C%87%E5%AE%9A%E8%A1%8C%E5%8F%B7%E7%9A%84%E5%86%85%E5%AE%B9/" />
    <author>
      <name>TheDarkStarJack</name>
    </author>

  
    
    <category term="Linux" />
    
    <category term="Vim" />
    
  

  <summary>有的时候明确知道需要保留那些行，虽然可以采用匹配每行的字符，但是可能需要保留的行的内容在其他行中也存在，这个时候可以利用 vim/nvim 的 \% 特殊字符匹配指定的行内容。

再结合 :g 、:g!、 :v 来选择/反选指定的行/列内容可以高效的过滤行


  
    
      符号
      含义
      备注
    
  
  
    
      \%
      用于匹配行号或列号
       
    
    
      \%^
      匹配文件开始的位置
       
    
    
      \%Nl
      匹配指定的[n]行，l 表示行号，line
       
    
    
      \%&amp;#39;m
      匹配指定的 m 标记
       
    
    
      \%&amp;amp;gt;&amp;#39;m
      匹配在 ...</summary>

  </entry>

  
  <entry>
    <title>sed 检查 Oracle日志 并输出对应的行号</title>
    <link href="https://thedarkstarjack.github.io/posts/sed-%E6%A3%80%E6%9F%A5-Oracle%E6%97%A5%E5%BF%97-%E5%B9%B6%E8%BE%93%E5%87%BA%E5%AF%B9%E5%BA%94%E7%9A%84%E8%A1%8C%E5%8F%B7/" rel="alternate" type="text/html" title="sed 检查 Oracle日志 并输出对应的行号" />
    <published>2024-08-26T16:45:20+08:00</published>
  
    <updated>2024-08-26T16:45:20+08:00</updated>
  
    <id>https://thedarkstarjack.github.io/posts/sed-%E6%A3%80%E6%9F%A5-Oracle%E6%97%A5%E5%BF%97-%E5%B9%B6%E8%BE%93%E5%87%BA%E5%AF%B9%E5%BA%94%E7%9A%84%E8%A1%8C%E5%8F%B7/</id>
    <content src="https://thedarkstarjack.github.io/posts/sed-%E6%A3%80%E6%9F%A5-Oracle%E6%97%A5%E5%BF%97-%E5%B9%B6%E8%BE%93%E5%87%BA%E5%AF%B9%E5%BA%94%E7%9A%84%E8%A1%8C%E5%8F%B7/" />
    <author>
      <name>TheDarkStarJack</name>
    </author>

  
    
    <category term="Linux" />
    
    <category term="sed" />
    
  

  <summary>在护网的时候可能需要定期检查日志文件，特别是日志文件中的错误信息，在 alert 日志中常见的报错一般都是 Error、ORA-、TNS- 为前缀的信息。我们可以利用 sed 工具检索日志文件中的信息，减少重复工作。

可以利用一下语句过滤错误信息：
## 一般来说 alert 日志的路径为
## ${ORACLE_BASE}/diag/rdbms/${ORACLE_SID}/${ORACLE_SID}/tracle/alert_${ORACLE_SID}.log
## 因为安装的原因，rdbms 下之后路径可能为大小或者小写的 ${ORACLE_SID} ，具体可以进入 rdbms 路径之后选择
## diag 的路径也可以进入实例之后使用 `show parameter diag` 查看
sed -n  &amp;#39;/Mon Aug 26 08/,/Mon Aug 26 09/p&amp;#39; ale...</summary>

  </entry>

</feed>


