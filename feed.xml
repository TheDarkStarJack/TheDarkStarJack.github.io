

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://thedarkstarjack.github.io/</id>
  <title>DarkStar</title>
  <subtitle>Blog and portfolio focused on Linux, Database, Shell, Python, CPP, and other technical things.</subtitle>
  <updated>2024-07-19T16:32:41+08:00</updated>
  <author>
    <name>TheDarkStarJack</name>
    <uri>https://thedarkstarjack.github.io/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="https://thedarkstarjack.github.io/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="zh-CN"
    href="https://thedarkstarjack.github.io/"/>
  <generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator>
  <rights> © 2024 TheDarkStarJack </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>Oracle DB_NAME、SERVICE_NAME、SID、INSTANCE_NAME、DB_UNIQUE_NAME的区别</title>
    <link href="https://thedarkstarjack.github.io/posts/Oracle-DB_NAME-SERVICE_NAME-SID-INSTANCE_NAME-DB_UNIQUE_NAME%E7%9A%84%E5%8C%BA%E5%88%AB/" rel="alternate" type="text/html" title="Oracle DB_NAME、SERVICE_NAME、SID、INSTANCE_NAME、DB_UNIQUE_NAME的区别" />
    <published>2024-07-19T00:41:47+08:00</published>
  
    <updated>2024-07-19T00:41:47+08:00</updated>
  
    <id>https://thedarkstarjack.github.io/posts/Oracle-DB_NAME-SERVICE_NAME-SID-INSTANCE_NAME-DB_UNIQUE_NAME%E7%9A%84%E5%8C%BA%E5%88%AB/</id>
    <content src="https://thedarkstarjack.github.io/posts/Oracle-DB_NAME-SERVICE_NAME-SID-INSTANCE_NAME-DB_UNIQUE_NAME%E7%9A%84%E5%8C%BA%E5%88%AB/" />
    <author>
      <name>TheDarkStarJack</name>
    </author>

  
    
    <category term="DataBase" />
    
    <category term="Oracle" />
    
  

  <summary>DB_NAME：
①是数据库名，长度不能超过8个字符，记录在datafile、redolog和control file中
②在DataGuard环境中DB_NAME相同而DB_UNIQUE_NAME不同
③在RAC环境中，各个节点的DB_NAME 都相同，但是INSTANCE_NAME不同
④DB_NAME还在动态注册监听的时候起作用，无论是否定义了SERVICE_NAME,PMON进程都会使用DB_NAME动态注册监听

DBID：
①DBID可以看做是DB_NAME在数据库内部的表示，它是在数据库创建的时候用DB_NAME结合算法计算出来的
②它存在于datafile和control file中，用来表示数据文件的归属，所以DBID是唯一的，对于不同的数据库，DB_NAME可以是相同的，但是DBID一定是唯一的，例如在DataGuard中，主备库的DB_NAME相同，但是DBID...</summary>

  </entry>

  
  <entry>
    <title>Oracle 修改 db_name</title>
    <link href="https://thedarkstarjack.github.io/posts/Oracle-%E4%BF%AE%E6%94%B9-db_name/" rel="alternate" type="text/html" title="Oracle 修改 db_name" />
    <published>2024-07-19T00:39:03+08:00</published>
  
    <updated>2024-07-19T00:39:03+08:00</updated>
  
    <id>https://thedarkstarjack.github.io/posts/Oracle-%E4%BF%AE%E6%94%B9-db_name/</id>
    <content src="https://thedarkstarjack.github.io/posts/Oracle-%E4%BF%AE%E6%94%B9-db_name/" />
    <author>
      <name>TheDarkStarJack</name>
    </author>

  
    
    <category term="DataBase" />
    
    <category term="Oracle" />
    
  

  <summary>有的时候恢复Oracle数据到另一个环境中之后，需要修改相关的实例名、服务名、数据库名等，方便区分不同的环境。
以下操作的前提是数据已经恢复到新的环境，在新的环境中修改db_name。

仅修改server_name
如果仅修改server_name可以直接登录数据库之后操作；
sqlplus sys/sys as sysdba 
SQL&amp;amp;gt; show parameter service_name
SQL&amp;amp;gt; alter system set service_names=&amp;#39;orcl&amp;#39; scope=both;

--  修改listener.ora 文件中的服务名：
SID_LIST_LISTENER =
  (SID_LIST =
    (SID_DESC =
      (SID_NAME = PLSExtProc)
      (ORACLE_HOME = E:\Ora...</summary>

  </entry>

  
  <entry>
    <title>MySQL 批量杀会话</title>
    <link href="https://thedarkstarjack.github.io/posts/MySQL-%E6%89%B9%E9%87%8F%E6%9D%80%E4%BC%9A%E8%AF%9D/" rel="alternate" type="text/html" title="MySQL 批量杀会话" />
    <published>2024-07-13T00:39:23+08:00</published>
  
    <updated>2024-07-13T00:39:23+08:00</updated>
  
    <id>https://thedarkstarjack.github.io/posts/MySQL-%E6%89%B9%E9%87%8F%E6%9D%80%E4%BC%9A%E8%AF%9D/</id>
    <content src="https://thedarkstarjack.github.io/posts/MySQL-%E6%89%B9%E9%87%8F%E6%9D%80%E4%BC%9A%E8%AF%9D/" />
    <author>
      <name>TheDarkStarJack</name>
    </author>

  
    
    <category term="DataBase" />
    
    <category term="MySQL" />
    
  

  <summary>MySQL的kill语法如下：
-- 可以查看帮助手册
help kill;
KILL [CONNECTION | QUERY] processlist_id;

KILL CONNECTION 与不带修饰符的 KILL 相同：它在终止连接正在执行的任何语句后终止与给定 processlist_id 关联的连接。会使对应的会话断开连接。

KILL QUERY 终止连接当前正在执行的语句，但保持会话连接。

processlist_id 可以通过 show [full] processlist 或者 performance_schema.threads 的 PROCESSLIST_ID 字段获取，也可以根据 information_schema.processlist 的 ID 字段获取。有的时候需要按照用户或者其他条件批量kill session 。可以参考以下语句：
SELECT...</summary>

  </entry>

  
  <entry>
    <title>Linux 批量替换文件夹下面的 Windows 换行符替换为 unix 风格换行符</title>
    <link href="https://thedarkstarjack.github.io/posts/Linux-%E6%89%B9%E9%87%8F%E6%9B%BF%E6%8D%A2%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%8B%E9%9D%A2%E7%9A%84Windows%E6%8D%A2%E8%A1%8C%E7%AC%A6%E6%9B%BF%E6%8D%A2%E4%B8%BAunix%E9%A3%8E%E6%A0%BC%E6%8D%A2%E8%A1%8C%E7%AC%A6/" rel="alternate" type="text/html" title="Linux 批量替换文件夹下面的 Windows 换行符替换为 unix 风格换行符" />
    <published>2024-07-09T23:26:34+08:00</published>
  
    <updated>2024-07-09T23:26:34+08:00</updated>
  
    <id>https://thedarkstarjack.github.io/posts/Linux-%E6%89%B9%E9%87%8F%E6%9B%BF%E6%8D%A2%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%8B%E9%9D%A2%E7%9A%84Windows%E6%8D%A2%E8%A1%8C%E7%AC%A6%E6%9B%BF%E6%8D%A2%E4%B8%BAunix%E9%A3%8E%E6%A0%BC%E6%8D%A2%E8%A1%8C%E7%AC%A6/</id>
    <content src="https://thedarkstarjack.github.io/posts/Linux-%E6%89%B9%E9%87%8F%E6%9B%BF%E6%8D%A2%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%8B%E9%9D%A2%E7%9A%84Windows%E6%8D%A2%E8%A1%8C%E7%AC%A6%E6%9B%BF%E6%8D%A2%E4%B8%BAunix%E9%A3%8E%E6%A0%BC%E6%8D%A2%E8%A1%8C%E7%AC%A6/" />
    <author>
      <name>TheDarkStarJack</name>
    </author>

  
    
    <category term="Linux" />
    
    <category term="Bash" />
    
  

  <summary>在Linux系统中，Windows风格的换行符（\r\n，即回车加换行）和Unix风格的换行符（\n）是不同的。Windows系统中的文本文件在Linux中可能会显示为带有^M字符的文件，这是因为^M是回车符（CR，Carriage Return）的表示方式。

有的时候将Linux中的文件或者Windows的文件互相拷贝的时候会自动转换换行符，经常遇到的情况是Windows下面可以正常运行一些unix风格的脚本，但是Linux中却无法运行Windows dos风格的文件。
要将一个文件夹中所有文件的Windows换行符替换为Unix风格的换行符，可以使用find命令结合sed或dos2unix工具来完成。以下是几种方法：


  使用find和sed:
     find /path/to/folder -type f -exec sed -i &amp;#39;s/\r$//&amp;#39; {} +
   ...</summary>

  </entry>

  
  <entry>
    <title>配置python jupyter 远程访问</title>
    <link href="https://thedarkstarjack.github.io/posts/%E9%85%8D%E7%BD%AEpython-jupyter%E8%BF%9C%E7%A8%8B%E8%AE%BF%E9%97%AE/" rel="alternate" type="text/html" title="配置python jupyter 远程访问" />
    <published>2024-07-02T17:00:00+08:00</published>
  
    <updated>2024-07-02T17:00:00+08:00</updated>
  
    <id>https://thedarkstarjack.github.io/posts/%E9%85%8D%E7%BD%AEpython-jupyter%E8%BF%9C%E7%A8%8B%E8%AE%BF%E9%97%AE/</id>
    <content src="https://thedarkstarjack.github.io/posts/%E9%85%8D%E7%BD%AEpython-jupyter%E8%BF%9C%E7%A8%8B%E8%AE%BF%E9%97%AE/" />
    <author>
      <name>TheDarkStarJack</name>
    </author>

  
    
    <category term="Python" />
    
    <category term="jupyter" />
    
  

  <summary>概述

Jupyter Notebook是一种可共享的文档，它结合了计算机代码、简单语言描述、数据、丰富的可视化效果（如 3D 模型、图表、图形和图形）以及交互式控件。笔记本和编辑器（如 JupyterLab）提供了一个快速的交互环境，用于原型设计和解释代码、探索和可视化数据以及与他人分享想法

简而言之，Jupyter Notebook是以网页的形式打开，相当于一个网页版便携式的python 代码工具，可以在网页页面中可以直接编写代码和运行代码，代码的运行结果也会直接在代码块下显示。如在编程过程中需要编写说明文档，可在同一个页面中直接编写，便于作及时的说明和解释。

配置python虚拟开发环境

安装jupyter最好先指定一个虚拟开发环境，避免污染全局的配置。怎么配置python的虚拟开发环境可以参考一文了解virtualenv、pyvenv、pyenv、pyenv virtu...</summary>

  </entry>

</feed>


